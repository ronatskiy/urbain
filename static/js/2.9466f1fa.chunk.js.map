{"version":3,"sources":["core/Module.js","modules/KSP/ModuleKSP.js"],"names":["Module","Object","D_Projects_github_com_urbain_ru_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_classes","alias","className","undefined","Error","ModuleKSP","sim","loadStarSystem","forceEpoch","time","scales","timeScales","updateScaleType","getDateByEpoch","getEpochByDate","roundDateUp","nextRenderingDate","formatDate","formatDateFull","ui","lambertPanel","useCurrentTime","epoch","date","scaleType","Math","ceil","string","floor","padStart","round","minute","fiveMinutes","tenMinutes","thirtyMinutes","hour","threeHours","day","threeDays","tenDays","thirtyDays","hundredDays","year","fiveYears","twentyYears"],"mappings":"4IAAqBA,aAEjB,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACXG,KAAKC,SAAW,yDAGVC,EAAOC,GACbH,KAAKC,SAASC,GAASC,mCAGlBD,GACL,QAA6BE,IAAzBJ,KAAKC,SAASC,GACd,MAAM,IAAIG,MAAM,yBAA2BH,GAE/C,OAAOF,KAAKC,SAASC,iLCXRI,2LAoBbC,IAAIC,eAAe,WAAY,WAC3BD,IAAIE,WAAW,GACfF,IAAIG,KAAKC,OAASL,EAAUM,WAC5BL,IAAIG,KAAKG,kBAETN,IAAIG,KAAKI,eAAiBR,EAAUQ,eACpCP,IAAIG,KAAKK,eAAiBT,EAAUS,eACpCR,IAAIG,KAAKM,YAAcV,EAAUU,YACjCT,IAAIG,KAAKO,kBAAoBX,EAAUW,kBACvCV,IAAIG,KAAKQ,WAAaZ,EAAUY,WAChCX,IAAIG,KAAKS,eAAiBb,EAAUa,eAEpCZ,IAAIa,GAAGC,aAAaC,4DAINC,GAClB,OAAOA,yCAGWC,GAClB,OAAOA,sCAGQD,EAAOE,GACtB,OAAOC,KAAKC,KAAKJ,EAAQjB,EAAUM,WAAWa,IAAcnB,EAAUM,WAAWa,6CAG5DF,EAAOE,GAC5B,OAAOF,EAAQjB,EAAUM,WAAWa,sCAGtBD,EAAMC,GACpB,GAAmB,WAAdA,GACiB,gBAAdA,GACc,eAAdA,GACc,kBAAdA,GACc,SAAdA,GACc,eAAdA,EACN,CACE,IAAIG,EAAcF,KAAKG,MAAML,EAAO,SAAW,IAI/C,OAHAI,GAAU,KAAO,GAAKF,KAAKG,MAAOL,EAAO,QAAW,QAAQM,SAAS,EAAG,KAAO,IAC/EF,GAAU,KAAO,GAAKF,KAAKG,MAAOL,EAAO,MAAS,OAAOM,SAAS,EAAG,KACrEF,GAAU,KAAO,GAAKF,KAAKG,MAAOL,EAAO,KAAQ,KAAKM,SAAS,EAAG,KAE/D,GAAmB,QAAdL,GACU,cAAdA,GACc,YAAdA,GACc,eAAdA,GACc,gBAAdA,EACN,CACE,IAAIG,EAAcF,KAAKG,MAAML,EAAO,SAAW,IAE/C,OADAI,GAAU,KAAO,GAAKF,KAAKG,MAAOL,EAAO,QAAW,QAAQM,SAAS,EAAG,KAAO,IAE5E,MAAmB,SAAdL,GACU,cAAdA,GACc,gBAAdA,EAEQC,KAAKG,MAAML,EAAO,SAAW,IAEtC,4CAGWA,GAClB,IAAII,EAAcF,KAAKG,MAAML,EAAO,SAAW,IAK/C,OAJAI,GAAU,KAAO,GAAKF,KAAKG,MAAOL,EAAO,QAAW,QAAQM,SAAS,EAAG,KAAO,IAC/EF,GAAU,KAAO,GAAKF,KAAKG,MAAOL,EAAO,MAAS,OAAOM,SAAS,EAAG,KACrEF,GAAU,KAAO,GAAKF,KAAKG,MAAOL,EAAO,KAAQ,KAAKM,SAAS,EAAG,KAClEF,GAAU,KAAO,GAAKF,KAAKK,MAAMP,EAAO,KAAKM,SAAS,EAAG,YAxF1BjC,KAAlBS,EAEVM,WAAa,CAChBoB,OAAQ,GACRC,YAAa,IACbC,WAAY,IACZC,cAAe,KACfC,KAAM,KACNC,WAAY,MACZC,IAAK,MACLC,UAAW,MACXC,QAAS,MACTC,WAAY,MACZC,YAAa,MACbC,KAAM,QACNC,UAAW,QACXC,YAAa","file":"static/js/2.9466f1fa.chunk.js","sourcesContent":["export default class Module\r\n{\r\n    constructor() {\r\n        this._classes = {};\r\n    }\r\n\r\n    _addClass(alias, className) {\r\n        this._classes[alias] = className;\r\n    }\r\n\r\n    getClass(alias) {\r\n        if (this._classes[alias] === undefined) {\r\n            throw new Error('Unknown module class: ' + alias);\r\n        }\r\n        return this._classes[alias];\r\n    }\r\n\r\n    init() {}\r\n}\r\n","import Module from \"../../core/Module\";\r\nimport { sim } from \"../../core/Simulation\";\r\n\r\nexport default class ModuleKSP extends Module\r\n{\r\n    static timeScales = {\r\n        minute: 60,\r\n        fiveMinutes: 300,\r\n        tenMinutes: 600,\r\n        thirtyMinutes: 1800,\r\n        hour: 3600,\r\n        threeHours: 10800,\r\n        day: 21600,\r\n        threeDays: 64800,\r\n        tenDays: 216000,\r\n        thirtyDays: 648000,\r\n        hundredDays: 2160000,\r\n        year: 9201600,\r\n        fiveYears: 46008000,\r\n        twentyYears: 184032000,\r\n    };\r\n\r\n    loadStarSystem() {\r\n        sim.loadStarSystem('ksp.json', () => {\r\n            sim.forceEpoch(0);\r\n            sim.time.scales = ModuleKSP.timeScales;\r\n            sim.time.updateScaleType();\r\n\r\n            sim.time.getDateByEpoch = ModuleKSP.getDateByEpoch;\r\n            sim.time.getEpochByDate = ModuleKSP.getEpochByDate;\r\n            sim.time.roundDateUp = ModuleKSP.roundDateUp;\r\n            sim.time.nextRenderingDate = ModuleKSP.nextRenderingDate;\r\n            sim.time.formatDate = ModuleKSP.formatDate;\r\n            sim.time.formatDateFull = ModuleKSP.formatDateFull;\r\n\r\n            sim.ui.lambertPanel.useCurrentTime();\r\n        });\r\n    }\r\n\r\n    static getDateByEpoch(epoch) {\r\n        return epoch;\r\n    }\r\n\r\n    static getEpochByDate(date) {\r\n        return date;\r\n    }\r\n\r\n    static roundDateUp(epoch, scaleType) {\r\n        return Math.ceil(epoch / ModuleKSP.timeScales[scaleType]) * ModuleKSP.timeScales[scaleType];\r\n    }\r\n\r\n    static nextRenderingDate(epoch, scaleType) {\r\n        return epoch + ModuleKSP.timeScales[scaleType];\r\n    }\r\n\r\n    static formatDate(date, scaleType) {\r\n        if ((scaleType === \"minute\")\r\n            || (scaleType === \"fiveMinutes\")\r\n            || (scaleType === \"tenMinutes\")\r\n            || (scaleType === \"thirtyMinutes\")\r\n            || (scaleType === \"hour\")\r\n            || (scaleType === \"threeHours\")\r\n        ) {\r\n            let string = '' + Math.floor(date / 9201600) + 'y';\r\n            string += ' ' + ('' + Math.floor((date % 9201600) / 21600)).padStart(3, '0') + 'd';\r\n            string += ' ' + ('' + Math.floor((date % 21600) / 3600)).padStart(2, '0');\r\n            string += ':' + ('' + Math.floor((date % 3600) / 60)).padStart(2, '0');\r\n            return string;\r\n        } else if ((scaleType === \"day\")\r\n            || (scaleType === \"threeDays\")\r\n            || (scaleType === \"tenDays\")\r\n            || (scaleType === \"thirtyDays\")\r\n            || (scaleType === \"hundredDays\")\r\n        ) {\r\n            let string = '' + Math.floor(date / 9201600) + 'y';\r\n            string += ' ' + ('' + Math.floor((date % 9201600) / 21600)).padStart(3, '0') + 'd';\r\n            return string;\r\n        } else if ((scaleType === \"year\")\r\n            || (scaleType === \"fiveYears\")\r\n            || (scaleType === \"twentyYears\")\r\n        ) {\r\n            return '' + Math.floor(date / 9201600) + 'y';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static formatDateFull(date) {\r\n        let string = '' + Math.floor(date / 9201600) + 'y';\r\n        string += ' ' + ('' + Math.floor((date % 9201600) / 21600)).padStart(3, '0') + 'd';\r\n        string += ' ' + ('' + Math.floor((date % 21600) / 3600)).padStart(2, '0');\r\n        string += ':' + ('' + Math.floor((date % 3600) / 60)).padStart(2, '0');\r\n        string += ':' + ('' + Math.round(date % 60)).padStart(2, '0');\r\n        return string;\r\n    }\r\n}\r\n"],"sourceRoot":""}