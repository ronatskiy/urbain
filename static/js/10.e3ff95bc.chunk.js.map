{"version":3,"sources":["../node_modules/intro.js/intro.js"],"names":["f","IntroJs","obj","this","_targetElement","_introItems","_options","nextLabel","prevLabel","skipLabel","doneLabel","hidePrev","hideNext","tooltipPosition","tooltipClass","highlightClass","exitOnEsc","exitOnOverlayClick","showStepNumbers","keyboardNavigation","showButtons","showBullets","showProgress","scrollToElement","scrollTo","scrollPadding","overlayOpacity","positionPrecedence","disableInteraction","helperElementPadding","hintPosition","hintButtonLabel","hintAnimation","buttonClass","_introForElement","targetElm","group","allIntroSteps","querySelectorAll","introItems","steps","_forEach","step","currentItem","_cloneObject","length","element","document","querySelector","floatingElementQuery","createElement","className","body","appendChild","position","push","bind","currentElement","getAttribute","style","display","parseInt","intro","nextStep","tempIntroItems","z","sort","a","b","overlayLayer","styleText","self","tagName","toLowerCase","elementPosition","_getOffset","width","height","top","left","cssText","onclick","_exitIntro","call","window","setTimeout","toString","_nextStep","DOMEvent","on","_onKeyDown","_onResize","refresh","e","code","which","charCode","keyCode","_previousStep","target","srcElement","match","_currentStep","_introCompleteCallback","click","preventDefault","returnValue","object","nodeType","temp","key","jQuery","_direction","_currentStepNumber","item","i","undefined","continueStep","_introBeforeChangeCallback","_showElement","targetElement","force","continueExit","_introBeforeExitCallback","overlayLayers","opacity","parentNode","removeChild","helperLayer","referenceLayer","disableInteractionLayer","floatingElement","_removeShowElement","parent","_removeClass","off","_introExitCallback","_placeTooltip","tooltipLayer","arrowLayer","helperNumberLayer","hintMode","currentStepObj","tooltipOffset","targetOffset","windowSize","currentTooltipPosition","tooltipCssClass","right","bottom","marginLeft","marginTop","replace","setAttribute","desiredTooltipPosition","possiblePositions","slice","_getWinSize","tooltipHeight","tooltipWidth","targetElementRect","getBoundingClientRect","calculatedPosition","_removeEntry","desiredAlignment","pos","hyphenIndex","indexOf","substr","split","offsetLeft","halfTooltipWidth","winWidth","Math","min","screen","possibleAlignments","calculatedAlignment","_determineAutoAlignment","_addClass","tooltipLayerStyleRight","_checkLeft","tooltipLayerStyleLeftRight","_checkRight","tooltipLayerStyleLeft","stringArray","stringToRemove","splice","_setHelperLayerPosition","widthHeightPadding","_isFixed","_setAnchorAsButton","anchor","tabIndex","_introChangeCallback","nextTooltipButton","prevTooltipButton","skipTooltipButton","scrollParent","oldHelperLayer","oldReferenceLayer","oldHelperNumberLayer","oldtooltipLayer","oldArrowLayer","oldtooltipContainer","lastIntroItem","_getScrollParent","_scrollParentToElement","_lastShowElementTimer","clearTimeout","innerHTML","_getProgress","test","focus","_scrollTo","tooltipTextLayer","bulletsLayer","progressLayer","buttonsLayer","ulContainer","anchorClick","goToStep","innerLi","anchorLink","progressBar","_introSkipCallback","parentElm","SVGElement","currentElementPosition","_getPropValue","zIndex","parseFloat","transform","_setShowElement","_introAfterChangeCallback","rect","el","innerHeight","innerWidth","_elementInViewport","winHeight","clientHeight","scrollBy","elm","arr","forEachFnc","completeFnc","len","_stamp","keys","events_key","_id","type","listener","context","useCapture","id","apply","arguments","handler","event","addEventListener","attachEvent","removeEventListener","detachEvent","pre","classList","cls","add","classNameRegex","propName","propValue","currentStyle","defaultView","getComputedStyle","getPropertyValue","p","nodeName","D","documentElement","clientWidth","_removeHintTooltip","tooltip","_populateHints","hints","hint","hintsWrapper","evt","stopPropagation","cancelBubble","_showHintDialog","getHintClick","hintDot","hintPulse","_alignHintPosition","_hintsAddedCallback","_reAlignHints","_hintQuerySelectorAll","selector","_hideHint","stepId","_hintCloseCallback","_showHint","_removeHint","offset","hintElement","_hintClickCallback","removedStep","tooltipWrapper","closeButton","docEl","scrollTop","pageYOffset","scrollLeft","pageXOffset","x","excludeStaticParent","overflowRegex","parentElement","overflow","overflowY","overflowX","offsetTop","introJs","instance","Error","instances","version","fn","prototype","clone","setOption","option","value","setOptions","options","obj1","obj2","attrname","obj3","_mergeOptions","start","addStep","addSteps","index","goToStepNumber","previousStep","exit","onbeforechange","providedCallback","onchange","onafterchange","oncomplete","onhintsadded","onhintclick","onhintclose","onexit","onskip","onbeforeexit","addHints","hideHint","hideHints","showHint","showHints","removeHints","removeHint","showHintDialog","module","exports","console","warn"],"mappings":"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","file":"static/js/10.e3ff95bc.chunk.js","sourcesContent":["/**\n * Intro.js v2.9.3\n * https://github.com/usablica/intro.js\n *\n * Copyright (C) 2017 Afshin Mehrabani (@afshinmeh)\n */\n(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f(); // deprecated function\n    // @since 2.8.0\n\n    module.exports.introJs = function () {\n      console.warn('Deprecated: please use require(\"intro.js\") directly, instead of the introJs method of the function'); // introJs()\n\n      return f().apply(this, arguments);\n    };\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.introJs = f();\n  }\n})(function () {\n  //Default config/variables\n  var VERSION = '2.9.3';\n  /**\n   * IntroJs main class\n   *\n   * @class IntroJs\n   */\n\n  function IntroJs(obj) {\n    this._targetElement = obj;\n    this._introItems = [];\n    this._options = {\n      /* Next button label in tooltip box */\n      nextLabel: 'Next &rarr;',\n\n      /* Previous button label in tooltip box */\n      prevLabel: '&larr; Back',\n\n      /* Skip button label in tooltip box */\n      skipLabel: 'Skip',\n\n      /* Done button label in tooltip box */\n      doneLabel: 'Done',\n\n      /* Hide previous button in the first step? Otherwise, it will be disabled button. */\n      hidePrev: false,\n\n      /* Hide next button in the last step? Otherwise, it will be disabled button. */\n      hideNext: false,\n\n      /* Default tooltip box position */\n      tooltipPosition: 'bottom',\n\n      /* Next CSS class for tooltip boxes */\n      tooltipClass: '',\n\n      /* CSS class that is added to the helperLayer */\n      highlightClass: '',\n\n      /* Close introduction when pressing Escape button? */\n      exitOnEsc: true,\n\n      /* Close introduction when clicking on overlay layer? */\n      exitOnOverlayClick: true,\n\n      /* Show step numbers in introduction? */\n      showStepNumbers: true,\n\n      /* Let user use keyboard to navigate the tour? */\n      keyboardNavigation: true,\n\n      /* Show tour control buttons? */\n      showButtons: true,\n\n      /* Show tour bullets? */\n      showBullets: true,\n\n      /* Show tour progress? */\n      showProgress: false,\n\n      /* Scroll to highlighted element? */\n      scrollToElement: true,\n\n      /*\n       * Should we scroll the tooltip or target element?\n       *\n       * Options are: 'element' or 'tooltip'\n       */\n      scrollTo: 'element',\n\n      /* Padding to add after scrolling when element is not in the viewport (in pixels) */\n      scrollPadding: 30,\n\n      /* Set the overlay opacity */\n      overlayOpacity: 0.8,\n\n      /* Precedence of positions, when auto is enabled */\n      positionPrecedence: [\"bottom\", \"top\", \"right\", \"left\"],\n\n      /* Disable an interaction with element? */\n      disableInteraction: false,\n\n      /* Set how much padding to be used around helper element */\n      helperElementPadding: 10,\n\n      /* Default hint position */\n      hintPosition: 'top-middle',\n\n      /* Hint button label */\n      hintButtonLabel: 'Got it',\n\n      /* Adding animation to hints? */\n      hintAnimation: true,\n\n      /* additional classes to put on the buttons */\n      buttonClass: \"introjs-button\"\n    };\n  }\n  /**\n   * Initiate a new introduction/guide from an element in the page\n   *\n   * @api private\n   * @method _introForElement\n   * @param {Object} targetElm\n   * @param {String} group\n   * @returns {Boolean} Success or not?\n   */\n\n\n  function _introForElement(targetElm, group) {\n    var allIntroSteps = targetElm.querySelectorAll(\"*[data-intro]\"),\n        introItems = [];\n\n    if (this._options.steps) {\n      //use steps passed programmatically\n      _forEach(this._options.steps, function (step) {\n        var currentItem = _cloneObject(step); //set the step\n\n\n        currentItem.step = introItems.length + 1; //use querySelector function only when developer used CSS selector\n\n        if (typeof currentItem.element === 'string') {\n          //grab the element with given selector from the page\n          currentItem.element = document.querySelector(currentItem.element);\n        } //intro without element\n\n\n        if (typeof currentItem.element === 'undefined' || currentItem.element === null) {\n          var floatingElementQuery = document.querySelector(\".introjsFloatingElement\");\n\n          if (floatingElementQuery === null) {\n            floatingElementQuery = document.createElement('div');\n            floatingElementQuery.className = 'introjsFloatingElement';\n            document.body.appendChild(floatingElementQuery);\n          }\n\n          currentItem.element = floatingElementQuery;\n          currentItem.position = 'floating';\n        }\n\n        currentItem.scrollTo = currentItem.scrollTo || this._options.scrollTo;\n\n        if (typeof currentItem.disableInteraction === 'undefined') {\n          currentItem.disableInteraction = this._options.disableInteraction;\n        }\n\n        if (currentItem.element !== null) {\n          introItems.push(currentItem);\n        }\n      }.bind(this));\n    } else {\n      //use steps from data-* annotations\n      var elmsLength = allIntroSteps.length;\n      var disableInteraction; //if there's no element to intro\n\n      if (elmsLength < 1) {\n        return false;\n      }\n\n      _forEach(allIntroSteps, function (currentElement) {\n        // PR #80\n        // start intro for groups of elements\n        if (group && currentElement.getAttribute(\"data-intro-group\") !== group) {\n          return;\n        } // skip hidden elements\n\n\n        if (currentElement.style.display === 'none') {\n          return;\n        }\n\n        var step = parseInt(currentElement.getAttribute('data-step'), 10);\n\n        if (typeof currentElement.getAttribute('data-disable-interaction') !== 'undefined') {\n          disableInteraction = !!currentElement.getAttribute('data-disable-interaction');\n        } else {\n          disableInteraction = this._options.disableInteraction;\n        }\n\n        if (step > 0) {\n          introItems[step - 1] = {\n            element: currentElement,\n            intro: currentElement.getAttribute('data-intro'),\n            step: parseInt(currentElement.getAttribute('data-step'), 10),\n            tooltipClass: currentElement.getAttribute('data-tooltipclass'),\n            highlightClass: currentElement.getAttribute('data-highlightclass'),\n            position: currentElement.getAttribute('data-position') || this._options.tooltipPosition,\n            scrollTo: currentElement.getAttribute('data-scrollto') || this._options.scrollTo,\n            disableInteraction: disableInteraction\n          };\n        }\n      }.bind(this)); //next add intro items without data-step\n      //todo: we need a cleanup here, two loops are redundant\n\n\n      var nextStep = 0;\n\n      _forEach(allIntroSteps, function (currentElement) {\n        // PR #80\n        // start intro for groups of elements\n        if (group && currentElement.getAttribute(\"data-intro-group\") !== group) {\n          return;\n        }\n\n        if (currentElement.getAttribute('data-step') === null) {\n          while (true) {\n            if (typeof introItems[nextStep] === 'undefined') {\n              break;\n            } else {\n              nextStep++;\n            }\n          }\n\n          if (typeof currentElement.getAttribute('data-disable-interaction') !== 'undefined') {\n            disableInteraction = !!currentElement.getAttribute('data-disable-interaction');\n          } else {\n            disableInteraction = this._options.disableInteraction;\n          }\n\n          introItems[nextStep] = {\n            element: currentElement,\n            intro: currentElement.getAttribute('data-intro'),\n            step: nextStep + 1,\n            tooltipClass: currentElement.getAttribute('data-tooltipclass'),\n            highlightClass: currentElement.getAttribute('data-highlightclass'),\n            position: currentElement.getAttribute('data-position') || this._options.tooltipPosition,\n            scrollTo: currentElement.getAttribute('data-scrollto') || this._options.scrollTo,\n            disableInteraction: disableInteraction\n          };\n        }\n      }.bind(this));\n    } //removing undefined/null elements\n\n\n    var tempIntroItems = [];\n\n    for (var z = 0; z < introItems.length; z++) {\n      if (introItems[z]) {\n        // copy non-falsy values to the end of the array\n        tempIntroItems.push(introItems[z]);\n      }\n    }\n\n    introItems = tempIntroItems; //Ok, sort all items with given steps\n\n    introItems.sort(function (a, b) {\n      return a.step - b.step;\n    }); //set it to the introJs object\n\n    this._introItems = introItems; //add overlay layer to the page\n\n    if (_addOverlayLayer.call(this, targetElm)) {\n      //then, start the show\n      _nextStep.call(this);\n\n      if (this._options.keyboardNavigation) {\n        DOMEvent.on(window, 'keydown', _onKeyDown, this, true);\n      } //for window resize\n\n\n      DOMEvent.on(window, 'resize', _onResize, this, true);\n    }\n\n    return false;\n  }\n\n  function _onResize() {\n    this.refresh.call(this);\n  }\n  /**\n  * on keyCode:\n  * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode\n  * This feature has been removed from the Web standards.\n  * Though some browsers may still support it, it is in\n  * the process of being dropped.\n  * Instead, you should use KeyboardEvent.code,\n  * if it's implemented.\n  *\n  * jQuery's approach is to test for\n  *   (1) e.which, then\n  *   (2) e.charCode, then\n  *   (3) e.keyCode\n  * https://github.com/jquery/jquery/blob/a6b0705294d336ae2f63f7276de0da1195495363/src/event.js#L638\n  *\n  * @param type var\n  * @return type\n  */\n\n\n  function _onKeyDown(e) {\n    var code = e.code === null ? e.which : e.code; // if code/e.which is null\n\n    if (code === null) {\n      code = e.charCode === null ? e.keyCode : e.charCode;\n    }\n\n    if ((code === 'Escape' || code === 27) && this._options.exitOnEsc === true) {\n      //escape key pressed, exit the intro\n      //check if exit callback is defined\n      _exitIntro.call(this, this._targetElement);\n    } else if (code === 'ArrowLeft' || code === 37) {\n      //left arrow\n      _previousStep.call(this);\n    } else if (code === 'ArrowRight' || code === 39) {\n      //right arrow\n      _nextStep.call(this);\n    } else if (code === 'Enter' || code === 13) {\n      //srcElement === ie\n      var target = e.target || e.srcElement;\n\n      if (target && target.className.match('introjs-prevbutton')) {\n        //user hit enter while focusing on previous button\n        _previousStep.call(this);\n      } else if (target && target.className.match('introjs-skipbutton')) {\n        //user hit enter while focusing on skip button\n        if (this._introItems.length - 1 === this._currentStep && typeof this._introCompleteCallback === 'function') {\n          this._introCompleteCallback.call(this);\n        }\n\n        _exitIntro.call(this, this._targetElement);\n      } else if (target && target.getAttribute('data-stepnumber')) {\n        // user hit enter while focusing on step bullet\n        target.click();\n      } else {\n        //default behavior for responding to enter\n        _nextStep.call(this);\n      } //prevent default behaviour on hitting Enter, to prevent steps being skipped in some browsers\n\n\n      if (e.preventDefault) {\n        e.preventDefault();\n      } else {\n        e.returnValue = false;\n      }\n    }\n  }\n  /*\n    * makes a copy of the object\n    * @api private\n    * @method _cloneObject\n   */\n\n\n  function _cloneObject(object) {\n    if (object === null || typeof object !== 'object' || typeof object.nodeType !== 'undefined') {\n      return object;\n    }\n\n    var temp = {};\n\n    for (var key in object) {\n      if (typeof window.jQuery !== 'undefined' && object[key] instanceof window.jQuery) {\n        temp[key] = object[key];\n      } else {\n        temp[key] = _cloneObject(object[key]);\n      }\n    }\n\n    return temp;\n  }\n  /**\n   * Go to specific step of introduction\n   *\n   * @api private\n   * @method _goToStep\n   */\n\n\n  function _goToStep(step) {\n    //because steps starts with zero\n    this._currentStep = step - 2;\n\n    if (typeof this._introItems !== 'undefined') {\n      _nextStep.call(this);\n    }\n  }\n  /**\n   * Go to the specific step of introduction with the explicit [data-step] number\n   *\n   * @api private\n   * @method _goToStepNumber\n   */\n\n\n  function _goToStepNumber(step) {\n    this._currentStepNumber = step;\n\n    if (typeof this._introItems !== 'undefined') {\n      _nextStep.call(this);\n    }\n  }\n  /**\n   * Go to next step on intro\n   *\n   * @api private\n   * @method _nextStep\n   */\n\n\n  function _nextStep() {\n    this._direction = 'forward';\n\n    if (typeof this._currentStepNumber !== 'undefined') {\n      _forEach(this._introItems, function (item, i) {\n        if (item.step === this._currentStepNumber) {\n          this._currentStep = i - 1;\n          this._currentStepNumber = undefined;\n        }\n      }.bind(this));\n    }\n\n    if (typeof this._currentStep === 'undefined') {\n      this._currentStep = 0;\n    } else {\n      ++this._currentStep;\n    }\n\n    var nextStep = this._introItems[this._currentStep];\n    var continueStep = true;\n\n    if (typeof this._introBeforeChangeCallback !== 'undefined') {\n      continueStep = this._introBeforeChangeCallback.call(this, nextStep.element);\n    } // if `onbeforechange` returned `false`, stop displaying the element\n\n\n    if (continueStep === false) {\n      --this._currentStep;\n      return false;\n    }\n\n    if (this._introItems.length <= this._currentStep) {\n      //end of the intro\n      //check if any callback is defined\n      if (typeof this._introCompleteCallback === 'function') {\n        this._introCompleteCallback.call(this);\n      }\n\n      _exitIntro.call(this, this._targetElement);\n\n      return;\n    }\n\n    _showElement.call(this, nextStep);\n  }\n  /**\n   * Go to previous step on intro\n   *\n   * @api private\n   * @method _previousStep\n   */\n\n\n  function _previousStep() {\n    this._direction = 'backward';\n\n    if (this._currentStep === 0) {\n      return false;\n    }\n\n    --this._currentStep;\n    var nextStep = this._introItems[this._currentStep];\n    var continueStep = true;\n\n    if (typeof this._introBeforeChangeCallback !== 'undefined') {\n      continueStep = this._introBeforeChangeCallback.call(this, nextStep.element);\n    } // if `onbeforechange` returned `false`, stop displaying the element\n\n\n    if (continueStep === false) {\n      ++this._currentStep;\n      return false;\n    }\n\n    _showElement.call(this, nextStep);\n  }\n  /**\n   * Update placement of the intro objects on the screen\n   * @api private\n   */\n\n\n  function _refresh() {\n    // re-align intros\n    _setHelperLayerPosition.call(this, document.querySelector('.introjs-helperLayer'));\n\n    _setHelperLayerPosition.call(this, document.querySelector('.introjs-tooltipReferenceLayer'));\n\n    _setHelperLayerPosition.call(this, document.querySelector('.introjs-disableInteraction')); // re-align tooltip\n\n\n    if (this._currentStep !== undefined && this._currentStep !== null) {\n      var oldHelperNumberLayer = document.querySelector('.introjs-helperNumberLayer'),\n          oldArrowLayer = document.querySelector('.introjs-arrow'),\n          oldtooltipContainer = document.querySelector('.introjs-tooltip');\n\n      _placeTooltip.call(this, this._introItems[this._currentStep].element, oldtooltipContainer, oldArrowLayer, oldHelperNumberLayer);\n    } //re-align hints\n\n\n    _reAlignHints.call(this);\n\n    return this;\n  }\n  /**\n   * Exit from intro\n   *\n   * @api private\n   * @method _exitIntro\n   * @param {Object} targetElement\n   * @param {Boolean} force - Setting to `true` will skip the result of beforeExit callback\n   */\n\n\n  function _exitIntro(targetElement, force) {\n    var continueExit = true; // calling onbeforeexit callback\n    //\n    // If this callback return `false`, it would halt the process\n\n    if (this._introBeforeExitCallback !== undefined) {\n      continueExit = this._introBeforeExitCallback.call(this);\n    } // skip this check if `force` parameter is `true`\n    // otherwise, if `onbeforeexit` returned `false`, don't exit the intro\n\n\n    if (!force && continueExit === false) return; //remove overlay layers from the page\n\n    var overlayLayers = targetElement.querySelectorAll('.introjs-overlay');\n\n    if (overlayLayers && overlayLayers.length) {\n      _forEach(overlayLayers, function (overlayLayer) {\n        overlayLayer.style.opacity = 0;\n        window.setTimeout(function () {\n          if (this.parentNode) {\n            this.parentNode.removeChild(this);\n          }\n        }.bind(overlayLayer), 500);\n      }.bind(this));\n    } //remove all helper layers\n\n\n    var helperLayer = targetElement.querySelector('.introjs-helperLayer');\n\n    if (helperLayer) {\n      helperLayer.parentNode.removeChild(helperLayer);\n    }\n\n    var referenceLayer = targetElement.querySelector('.introjs-tooltipReferenceLayer');\n\n    if (referenceLayer) {\n      referenceLayer.parentNode.removeChild(referenceLayer);\n    } //remove disableInteractionLayer\n\n\n    var disableInteractionLayer = targetElement.querySelector('.introjs-disableInteraction');\n\n    if (disableInteractionLayer) {\n      disableInteractionLayer.parentNode.removeChild(disableInteractionLayer);\n    } //remove intro floating element\n\n\n    var floatingElement = document.querySelector('.introjsFloatingElement');\n\n    if (floatingElement) {\n      floatingElement.parentNode.removeChild(floatingElement);\n    }\n\n    _removeShowElement(); //remove `introjs-fixParent` class from the elements\n\n\n    var fixParents = document.querySelectorAll('.introjs-fixParent');\n\n    _forEach(fixParents, function (parent) {\n      _removeClass(parent, /introjs-fixParent/g);\n    }); //clean listeners\n\n\n    DOMEvent.off(window, 'keydown', _onKeyDown, this, true);\n    DOMEvent.off(window, 'resize', _onResize, this, true); //check if any callback is defined\n\n    if (this._introExitCallback !== undefined) {\n      this._introExitCallback.call(this);\n    } //set the step to zero\n\n\n    this._currentStep = undefined;\n  }\n  /**\n   * Render tooltip box in the page\n   *\n   * @api private\n   * @method _placeTooltip\n   * @param {HTMLElement} targetElement\n   * @param {HTMLElement} tooltipLayer\n   * @param {HTMLElement} arrowLayer\n   * @param {HTMLElement} helperNumberLayer\n   * @param {Boolean} hintMode\n   */\n\n\n  function _placeTooltip(targetElement, tooltipLayer, arrowLayer, helperNumberLayer, hintMode) {\n    var tooltipCssClass = '',\n        currentStepObj,\n        tooltipOffset,\n        targetOffset,\n        windowSize,\n        currentTooltipPosition;\n    hintMode = hintMode || false; //reset the old style\n\n    tooltipLayer.style.top = null;\n    tooltipLayer.style.right = null;\n    tooltipLayer.style.bottom = null;\n    tooltipLayer.style.left = null;\n    tooltipLayer.style.marginLeft = null;\n    tooltipLayer.style.marginTop = null;\n    arrowLayer.style.display = 'inherit';\n\n    if (typeof helperNumberLayer !== 'undefined' && helperNumberLayer !== null) {\n      helperNumberLayer.style.top = null;\n      helperNumberLayer.style.left = null;\n    } //prevent error when `this._currentStep` is undefined\n\n\n    if (!this._introItems[this._currentStep]) return; //if we have a custom css class for each step\n\n    currentStepObj = this._introItems[this._currentStep];\n\n    if (typeof currentStepObj.tooltipClass === 'string') {\n      tooltipCssClass = currentStepObj.tooltipClass;\n    } else {\n      tooltipCssClass = this._options.tooltipClass;\n    }\n\n    tooltipLayer.className = ('introjs-tooltip ' + tooltipCssClass).replace(/^\\s+|\\s+$/g, '');\n    tooltipLayer.setAttribute('role', 'dialog');\n    currentTooltipPosition = this._introItems[this._currentStep].position; // Floating is always valid, no point in calculating\n\n    if (currentTooltipPosition !== \"floating\") {\n      currentTooltipPosition = _determineAutoPosition.call(this, targetElement, tooltipLayer, currentTooltipPosition);\n    }\n\n    var tooltipLayerStyleLeft;\n    targetOffset = _getOffset(targetElement);\n    tooltipOffset = _getOffset(tooltipLayer);\n    windowSize = _getWinSize();\n\n    _addClass(tooltipLayer, 'introjs-' + currentTooltipPosition);\n\n    switch (currentTooltipPosition) {\n      case 'top-right-aligned':\n        arrowLayer.className = 'introjs-arrow bottom-right';\n        var tooltipLayerStyleRight = 0;\n\n        _checkLeft(targetOffset, tooltipLayerStyleRight, tooltipOffset, tooltipLayer);\n\n        tooltipLayer.style.bottom = targetOffset.height + 20 + 'px';\n        break;\n\n      case 'top-middle-aligned':\n        arrowLayer.className = 'introjs-arrow bottom-middle';\n        var tooltipLayerStyleLeftRight = targetOffset.width / 2 - tooltipOffset.width / 2; // a fix for middle aligned hints\n\n        if (hintMode) {\n          tooltipLayerStyleLeftRight += 5;\n        }\n\n        if (_checkLeft(targetOffset, tooltipLayerStyleLeftRight, tooltipOffset, tooltipLayer)) {\n          tooltipLayer.style.right = null;\n\n          _checkRight(targetOffset, tooltipLayerStyleLeftRight, tooltipOffset, windowSize, tooltipLayer);\n        }\n\n        tooltipLayer.style.bottom = targetOffset.height + 20 + 'px';\n        break;\n\n      case 'top-left-aligned': // top-left-aligned is the same as the default top\n\n      case 'top':\n        arrowLayer.className = 'introjs-arrow bottom';\n        tooltipLayerStyleLeft = hintMode ? 0 : 15;\n\n        _checkRight(targetOffset, tooltipLayerStyleLeft, tooltipOffset, windowSize, tooltipLayer);\n\n        tooltipLayer.style.bottom = targetOffset.height + 20 + 'px';\n        break;\n\n      case 'right':\n        tooltipLayer.style.left = targetOffset.width + 20 + 'px';\n\n        if (targetOffset.top + tooltipOffset.height > windowSize.height) {\n          // In this case, right would have fallen below the bottom of the screen.\n          // Modify so that the bottom of the tooltip connects with the target\n          arrowLayer.className = \"introjs-arrow left-bottom\";\n          tooltipLayer.style.top = \"-\" + (tooltipOffset.height - targetOffset.height - 20) + \"px\";\n        } else {\n          arrowLayer.className = 'introjs-arrow left';\n        }\n\n        break;\n\n      case 'left':\n        if (!hintMode && this._options.showStepNumbers === true) {\n          tooltipLayer.style.top = '15px';\n        }\n\n        if (targetOffset.top + tooltipOffset.height > windowSize.height) {\n          // In this case, left would have fallen below the bottom of the screen.\n          // Modify so that the bottom of the tooltip connects with the target\n          tooltipLayer.style.top = \"-\" + (tooltipOffset.height - targetOffset.height - 20) + \"px\";\n          arrowLayer.className = 'introjs-arrow right-bottom';\n        } else {\n          arrowLayer.className = 'introjs-arrow right';\n        }\n\n        tooltipLayer.style.right = targetOffset.width + 20 + 'px';\n        break;\n\n      case 'floating':\n        arrowLayer.style.display = 'none'; //we have to adjust the top and left of layer manually for intro items without element\n\n        tooltipLayer.style.left = '50%';\n        tooltipLayer.style.top = '50%';\n        tooltipLayer.style.marginLeft = '-' + tooltipOffset.width / 2 + 'px';\n        tooltipLayer.style.marginTop = '-' + tooltipOffset.height / 2 + 'px';\n\n        if (typeof helperNumberLayer !== 'undefined' && helperNumberLayer !== null) {\n          helperNumberLayer.style.left = '-' + (tooltipOffset.width / 2 + 18) + 'px';\n          helperNumberLayer.style.top = '-' + (tooltipOffset.height / 2 + 18) + 'px';\n        }\n\n        break;\n\n      case 'bottom-right-aligned':\n        arrowLayer.className = 'introjs-arrow top-right';\n        tooltipLayerStyleRight = 0;\n\n        _checkLeft(targetOffset, tooltipLayerStyleRight, tooltipOffset, tooltipLayer);\n\n        tooltipLayer.style.top = targetOffset.height + 20 + 'px';\n        break;\n\n      case 'bottom-middle-aligned':\n        arrowLayer.className = 'introjs-arrow top-middle';\n        tooltipLayerStyleLeftRight = targetOffset.width / 2 - tooltipOffset.width / 2; // a fix for middle aligned hints\n\n        if (hintMode) {\n          tooltipLayerStyleLeftRight += 5;\n        }\n\n        if (_checkLeft(targetOffset, tooltipLayerStyleLeftRight, tooltipOffset, tooltipLayer)) {\n          tooltipLayer.style.right = null;\n\n          _checkRight(targetOffset, tooltipLayerStyleLeftRight, tooltipOffset, windowSize, tooltipLayer);\n        }\n\n        tooltipLayer.style.top = targetOffset.height + 20 + 'px';\n        break;\n      // case 'bottom-left-aligned':\n      // Bottom-left-aligned is the same as the default bottom\n      // case 'bottom':\n      // Bottom going to follow the default behavior\n\n      default:\n        arrowLayer.className = 'introjs-arrow top';\n        tooltipLayerStyleLeft = 0;\n\n        _checkRight(targetOffset, tooltipLayerStyleLeft, tooltipOffset, windowSize, tooltipLayer);\n\n        tooltipLayer.style.top = targetOffset.height + 20 + 'px';\n    }\n  }\n  /**\n   * Set tooltip left so it doesn't go off the right side of the window\n   *\n   * @return boolean true, if tooltipLayerStyleLeft is ok.  false, otherwise.\n   */\n\n\n  function _checkRight(targetOffset, tooltipLayerStyleLeft, tooltipOffset, windowSize, tooltipLayer) {\n    if (targetOffset.left + tooltipLayerStyleLeft + tooltipOffset.width > windowSize.width) {\n      // off the right side of the window\n      tooltipLayer.style.left = windowSize.width - tooltipOffset.width - targetOffset.left + 'px';\n      return false;\n    }\n\n    tooltipLayer.style.left = tooltipLayerStyleLeft + 'px';\n    return true;\n  }\n  /**\n   * Set tooltip right so it doesn't go off the left side of the window\n   *\n   * @return boolean true, if tooltipLayerStyleRight is ok.  false, otherwise.\n   */\n\n\n  function _checkLeft(targetOffset, tooltipLayerStyleRight, tooltipOffset, tooltipLayer) {\n    if (targetOffset.left + targetOffset.width - tooltipLayerStyleRight - tooltipOffset.width < 0) {\n      // off the left side of the window\n      tooltipLayer.style.left = -targetOffset.left + 'px';\n      return false;\n    }\n\n    tooltipLayer.style.right = tooltipLayerStyleRight + 'px';\n    return true;\n  }\n  /**\n   * Determines the position of the tooltip based on the position precedence and availability\n   * of screen space.\n   *\n   * @param {Object}    targetElement\n   * @param {Object}    tooltipLayer\n   * @param {String}    desiredTooltipPosition\n   * @return {String}   calculatedPosition\n   */\n\n\n  function _determineAutoPosition(targetElement, tooltipLayer, desiredTooltipPosition) {\n    // Take a clone of position precedence. These will be the available\n    var possiblePositions = this._options.positionPrecedence.slice();\n\n    var windowSize = _getWinSize();\n\n    var tooltipHeight = _getOffset(tooltipLayer).height + 10;\n    var tooltipWidth = _getOffset(tooltipLayer).width + 20;\n    var targetElementRect = targetElement.getBoundingClientRect(); // If we check all the possible areas, and there are no valid places for the tooltip, the element\n    // must take up most of the screen real estate. Show the tooltip floating in the middle of the screen.\n\n    var calculatedPosition = \"floating\";\n    /*\n    * auto determine position \n    */\n    // Check for space below\n\n    if (targetElementRect.bottom + tooltipHeight + tooltipHeight > windowSize.height) {\n      _removeEntry(possiblePositions, \"bottom\");\n    } // Check for space above\n\n\n    if (targetElementRect.top - tooltipHeight < 0) {\n      _removeEntry(possiblePositions, \"top\");\n    } // Check for space to the right\n\n\n    if (targetElementRect.right + tooltipWidth > windowSize.width) {\n      _removeEntry(possiblePositions, \"right\");\n    } // Check for space to the left\n\n\n    if (targetElementRect.left - tooltipWidth < 0) {\n      _removeEntry(possiblePositions, \"left\");\n    } // @var {String}  ex: 'right-aligned'\n\n\n    var desiredAlignment = function (pos) {\n      var hyphenIndex = pos.indexOf('-');\n\n      if (hyphenIndex !== -1) {\n        // has alignment\n        return pos.substr(hyphenIndex);\n      }\n\n      return '';\n    }(desiredTooltipPosition || ''); // strip alignment from position\n\n\n    if (desiredTooltipPosition) {\n      // ex: \"bottom-right-aligned\"\n      // should return 'bottom'\n      desiredTooltipPosition = desiredTooltipPosition.split('-')[0];\n    }\n\n    if (possiblePositions.length) {\n      if (desiredTooltipPosition !== \"auto\" && possiblePositions.indexOf(desiredTooltipPosition) > -1) {\n        // If the requested position is in the list, choose that\n        calculatedPosition = desiredTooltipPosition;\n      } else {\n        // Pick the first valid position, in order\n        calculatedPosition = possiblePositions[0];\n      }\n    } // only top and bottom positions have optional alignments\n\n\n    if (['top', 'bottom'].indexOf(calculatedPosition) !== -1) {\n      calculatedPosition += _determineAutoAlignment(targetElementRect.left, tooltipWidth, windowSize, desiredAlignment);\n    }\n\n    return calculatedPosition;\n  }\n  /**\n  * auto-determine alignment\n  * @param {Integer}  offsetLeft\n  * @param {Integer}  tooltipWidth\n  * @param {Object}   windowSize\n  * @param {String}   desiredAlignment\n  * @return {String}  calculatedAlignment\n  */\n\n\n  function _determineAutoAlignment(offsetLeft, tooltipWidth, windowSize, desiredAlignment) {\n    var halfTooltipWidth = tooltipWidth / 2,\n        winWidth = Math.min(windowSize.width, window.screen.width),\n        possibleAlignments = ['-left-aligned', '-middle-aligned', '-right-aligned'],\n        calculatedAlignment = ''; // valid left must be at least a tooltipWidth\n    // away from right side\n\n    if (winWidth - offsetLeft < tooltipWidth) {\n      _removeEntry(possibleAlignments, '-left-aligned');\n    } // valid middle must be at least half \n    // width away from both sides\n\n\n    if (offsetLeft < halfTooltipWidth || winWidth - offsetLeft < halfTooltipWidth) {\n      _removeEntry(possibleAlignments, '-middle-aligned');\n    } // valid right must be at least a tooltipWidth\n    // width away from left side\n\n\n    if (offsetLeft < tooltipWidth) {\n      _removeEntry(possibleAlignments, '-right-aligned');\n    }\n\n    if (possibleAlignments.length) {\n      if (possibleAlignments.indexOf(desiredAlignment) !== -1) {\n        // the desired alignment is valid\n        calculatedAlignment = desiredAlignment;\n      } else {\n        // pick the first valid position, in order\n        calculatedAlignment = possibleAlignments[0];\n      }\n    } else {\n      // if screen width is too small \n      // for ANY alignment, middle is \n      // probably the best for visibility\n      calculatedAlignment = '-middle-aligned';\n    }\n\n    return calculatedAlignment;\n  }\n  /**\n   * Remove an entry from a string array if it's there, does nothing if it isn't there.\n   *\n   * @param {Array} stringArray\n   * @param {String} stringToRemove\n   */\n\n\n  function _removeEntry(stringArray, stringToRemove) {\n    if (stringArray.indexOf(stringToRemove) > -1) {\n      stringArray.splice(stringArray.indexOf(stringToRemove), 1);\n    }\n  }\n  /**\n   * Update the position of the helper layer on the screen\n   *\n   * @api private\n   * @method _setHelperLayerPosition\n   * @param {Object} helperLayer\n   */\n\n\n  function _setHelperLayerPosition(helperLayer) {\n    if (helperLayer) {\n      //prevent error when `this._currentStep` in undefined\n      if (!this._introItems[this._currentStep]) return;\n\n      var currentElement = this._introItems[this._currentStep],\n          elementPosition = _getOffset(currentElement.element),\n          widthHeightPadding = this._options.helperElementPadding; // If the target element is fixed, the tooltip should be fixed as well.\n      // Otherwise, remove a fixed class that may be left over from the previous\n      // step.\n\n\n      if (_isFixed(currentElement.element)) {\n        _addClass(helperLayer, 'introjs-fixedTooltip');\n      } else {\n        _removeClass(helperLayer, 'introjs-fixedTooltip');\n      }\n\n      if (currentElement.position === 'floating') {\n        widthHeightPadding = 0;\n      } //set new position to helper layer\n\n\n      helperLayer.style.cssText = 'width: ' + (elementPosition.width + widthHeightPadding) + 'px; ' + 'height:' + (elementPosition.height + widthHeightPadding) + 'px; ' + 'top:' + (elementPosition.top - widthHeightPadding / 2) + 'px;' + 'left: ' + (elementPosition.left - widthHeightPadding / 2) + 'px;';\n    }\n  }\n  /**\n   * Add disableinteraction layer and adjust the size and position of the layer\n   *\n   * @api private\n   * @method _disableInteraction\n   */\n\n\n  function _disableInteraction() {\n    var disableInteractionLayer = document.querySelector('.introjs-disableInteraction');\n\n    if (disableInteractionLayer === null) {\n      disableInteractionLayer = document.createElement('div');\n      disableInteractionLayer.className = 'introjs-disableInteraction';\n\n      this._targetElement.appendChild(disableInteractionLayer);\n    }\n\n    _setHelperLayerPosition.call(this, disableInteractionLayer);\n  }\n  /**\n   * Setting anchors to behave like buttons\n   *\n   * @api private\n   * @method _setAnchorAsButton\n   */\n\n\n  function _setAnchorAsButton(anchor) {\n    anchor.setAttribute('role', 'button');\n    anchor.tabIndex = 0;\n  }\n  /**\n   * Show an element on the page\n   *\n   * @api private\n   * @method _showElement\n   * @param {Object} targetElement\n   */\n\n\n  function _showElement(targetElement) {\n    if (typeof this._introChangeCallback !== 'undefined') {\n      this._introChangeCallback.call(this, targetElement.element);\n    }\n\n    var self = this,\n        oldHelperLayer = document.querySelector('.introjs-helperLayer'),\n        oldReferenceLayer = document.querySelector('.introjs-tooltipReferenceLayer'),\n        highlightClass = 'introjs-helperLayer',\n        nextTooltipButton,\n        prevTooltipButton,\n        skipTooltipButton,\n        scrollParent; //check for a current step highlight class\n\n    if (typeof targetElement.highlightClass === 'string') {\n      highlightClass += ' ' + targetElement.highlightClass;\n    } //check for options highlight class\n\n\n    if (typeof this._options.highlightClass === 'string') {\n      highlightClass += ' ' + this._options.highlightClass;\n    }\n\n    if (oldHelperLayer !== null) {\n      var oldHelperNumberLayer = oldReferenceLayer.querySelector('.introjs-helperNumberLayer'),\n          oldtooltipLayer = oldReferenceLayer.querySelector('.introjs-tooltiptext'),\n          oldArrowLayer = oldReferenceLayer.querySelector('.introjs-arrow'),\n          oldtooltipContainer = oldReferenceLayer.querySelector('.introjs-tooltip');\n      skipTooltipButton = oldReferenceLayer.querySelector('.introjs-skipbutton');\n      prevTooltipButton = oldReferenceLayer.querySelector('.introjs-prevbutton');\n      nextTooltipButton = oldReferenceLayer.querySelector('.introjs-nextbutton'); //update or reset the helper highlight class\n\n      oldHelperLayer.className = highlightClass; //hide the tooltip\n\n      oldtooltipContainer.style.opacity = 0;\n      oldtooltipContainer.style.display = \"none\";\n\n      if (oldHelperNumberLayer !== null) {\n        var lastIntroItem = this._introItems[targetElement.step - 2 >= 0 ? targetElement.step - 2 : 0];\n\n        if (lastIntroItem !== null && this._direction === 'forward' && lastIntroItem.position === 'floating' || this._direction === 'backward' && targetElement.position === 'floating') {\n          oldHelperNumberLayer.style.opacity = 0;\n        }\n      } // scroll to element\n\n\n      scrollParent = _getScrollParent(targetElement.element);\n\n      if (scrollParent !== document.body) {\n        // target is within a scrollable element\n        _scrollParentToElement(scrollParent, targetElement.element);\n      } // set new position to helper layer\n\n\n      _setHelperLayerPosition.call(self, oldHelperLayer);\n\n      _setHelperLayerPosition.call(self, oldReferenceLayer); //remove `introjs-fixParent` class from the elements\n\n\n      var fixParents = document.querySelectorAll('.introjs-fixParent');\n\n      _forEach(fixParents, function (parent) {\n        _removeClass(parent, /introjs-fixParent/g);\n      }); //remove old classes if the element still exist\n\n\n      _removeShowElement(); //we should wait until the CSS3 transition is competed (it's 0.3 sec) to prevent incorrect `height` and `width` calculation\n\n\n      if (self._lastShowElementTimer) {\n        window.clearTimeout(self._lastShowElementTimer);\n      }\n\n      self._lastShowElementTimer = window.setTimeout(function () {\n        //set current step to the label\n        if (oldHelperNumberLayer !== null) {\n          oldHelperNumberLayer.innerHTML = targetElement.step;\n        } //set current tooltip text\n\n\n        oldtooltipLayer.innerHTML = targetElement.intro; //set the tooltip position\n\n        oldtooltipContainer.style.display = \"block\";\n\n        _placeTooltip.call(self, targetElement.element, oldtooltipContainer, oldArrowLayer, oldHelperNumberLayer); //change active bullet\n\n\n        if (self._options.showBullets) {\n          oldReferenceLayer.querySelector('.introjs-bullets li > a.active').className = '';\n          oldReferenceLayer.querySelector('.introjs-bullets li > a[data-stepnumber=\"' + targetElement.step + '\"]').className = 'active';\n        }\n\n        oldReferenceLayer.querySelector('.introjs-progress .introjs-progressbar').style.cssText = 'width:' + _getProgress.call(self) + '%;';\n        oldReferenceLayer.querySelector('.introjs-progress .introjs-progressbar').setAttribute('aria-valuenow', _getProgress.call(self)); //show the tooltip\n\n        oldtooltipContainer.style.opacity = 1;\n        if (oldHelperNumberLayer) oldHelperNumberLayer.style.opacity = 1; //reset button focus\n\n        if (typeof skipTooltipButton !== \"undefined\" && skipTooltipButton !== null && /introjs-donebutton/gi.test(skipTooltipButton.className)) {\n          // skip button is now \"done\" button\n          skipTooltipButton.focus();\n        } else if (typeof nextTooltipButton !== \"undefined\" && nextTooltipButton !== null) {\n          //still in the tour, focus on next\n          nextTooltipButton.focus();\n        } // change the scroll of the window, if needed\n\n\n        _scrollTo.call(self, targetElement.scrollTo, targetElement, oldtooltipLayer);\n      }, 350); // end of old element if-else condition\n    } else {\n      var helperLayer = document.createElement('div'),\n          referenceLayer = document.createElement('div'),\n          arrowLayer = document.createElement('div'),\n          tooltipLayer = document.createElement('div'),\n          tooltipTextLayer = document.createElement('div'),\n          bulletsLayer = document.createElement('div'),\n          progressLayer = document.createElement('div'),\n          buttonsLayer = document.createElement('div');\n      helperLayer.className = highlightClass;\n      referenceLayer.className = 'introjs-tooltipReferenceLayer'; // scroll to element\n\n      scrollParent = _getScrollParent(targetElement.element);\n\n      if (scrollParent !== document.body) {\n        // target is within a scrollable element\n        _scrollParentToElement(scrollParent, targetElement.element);\n      } //set new position to helper layer\n\n\n      _setHelperLayerPosition.call(self, helperLayer);\n\n      _setHelperLayerPosition.call(self, referenceLayer); //add helper layer to target element\n\n\n      this._targetElement.appendChild(helperLayer);\n\n      this._targetElement.appendChild(referenceLayer);\n\n      arrowLayer.className = 'introjs-arrow';\n      tooltipTextLayer.className = 'introjs-tooltiptext';\n      tooltipTextLayer.innerHTML = targetElement.intro;\n      bulletsLayer.className = 'introjs-bullets';\n\n      if (this._options.showBullets === false) {\n        bulletsLayer.style.display = 'none';\n      }\n\n      var ulContainer = document.createElement('ul');\n      ulContainer.setAttribute('role', 'tablist');\n\n      var anchorClick = function anchorClick() {\n        self.goToStep(this.getAttribute('data-stepnumber'));\n      };\n\n      _forEach(this._introItems, function (item, i) {\n        var innerLi = document.createElement('li');\n        var anchorLink = document.createElement('a');\n        innerLi.setAttribute('role', 'presentation');\n        anchorLink.setAttribute('role', 'tab');\n        anchorLink.onclick = anchorClick;\n\n        if (i === targetElement.step - 1) {\n          anchorLink.className = 'active';\n        }\n\n        _setAnchorAsButton(anchorLink);\n\n        anchorLink.innerHTML = \"&nbsp;\";\n        anchorLink.setAttribute('data-stepnumber', item.step);\n        innerLi.appendChild(anchorLink);\n        ulContainer.appendChild(innerLi);\n      });\n\n      bulletsLayer.appendChild(ulContainer);\n      progressLayer.className = 'introjs-progress';\n\n      if (this._options.showProgress === false) {\n        progressLayer.style.display = 'none';\n      }\n\n      var progressBar = document.createElement('div');\n      progressBar.className = 'introjs-progressbar';\n      progressBar.setAttribute('role', 'progress');\n      progressBar.setAttribute('aria-valuemin', 0);\n      progressBar.setAttribute('aria-valuemax', 100);\n      progressBar.setAttribute('aria-valuenow', _getProgress.call(this));\n      progressBar.style.cssText = 'width:' + _getProgress.call(this) + '%;';\n      progressLayer.appendChild(progressBar);\n      buttonsLayer.className = 'introjs-tooltipbuttons';\n\n      if (this._options.showButtons === false) {\n        buttonsLayer.style.display = 'none';\n      }\n\n      tooltipLayer.className = 'introjs-tooltip';\n      tooltipLayer.appendChild(tooltipTextLayer);\n      tooltipLayer.appendChild(bulletsLayer);\n      tooltipLayer.appendChild(progressLayer); //add helper layer number\n\n      var helperNumberLayer = document.createElement('span');\n\n      if (this._options.showStepNumbers === true) {\n        helperNumberLayer.className = 'introjs-helperNumberLayer';\n        helperNumberLayer.innerHTML = targetElement.step;\n        referenceLayer.appendChild(helperNumberLayer);\n      }\n\n      tooltipLayer.appendChild(arrowLayer);\n      referenceLayer.appendChild(tooltipLayer); //next button\n\n      nextTooltipButton = document.createElement('a');\n\n      nextTooltipButton.onclick = function () {\n        if (self._introItems.length - 1 !== self._currentStep) {\n          _nextStep.call(self);\n        }\n      };\n\n      _setAnchorAsButton(nextTooltipButton);\n\n      nextTooltipButton.innerHTML = this._options.nextLabel; //previous button\n\n      prevTooltipButton = document.createElement('a');\n\n      prevTooltipButton.onclick = function () {\n        if (self._currentStep !== 0) {\n          _previousStep.call(self);\n        }\n      };\n\n      _setAnchorAsButton(prevTooltipButton);\n\n      prevTooltipButton.innerHTML = this._options.prevLabel; //skip button\n\n      skipTooltipButton = document.createElement('a');\n      skipTooltipButton.className = this._options.buttonClass + ' introjs-skipbutton ';\n\n      _setAnchorAsButton(skipTooltipButton);\n\n      skipTooltipButton.innerHTML = this._options.skipLabel;\n\n      skipTooltipButton.onclick = function () {\n        if (self._introItems.length - 1 === self._currentStep && typeof self._introCompleteCallback === 'function') {\n          self._introCompleteCallback.call(self);\n        }\n\n        if (self._introItems.length - 1 !== self._currentStep && typeof self._introExitCallback === 'function') {\n          self._introExitCallback.call(self);\n        }\n\n        if (typeof self._introSkipCallback === 'function') {\n          self._introSkipCallback.call(self);\n        }\n\n        _exitIntro.call(self, self._targetElement);\n      };\n\n      buttonsLayer.appendChild(skipTooltipButton); //in order to prevent displaying next/previous button always\n\n      if (this._introItems.length > 1) {\n        buttonsLayer.appendChild(prevTooltipButton);\n        buttonsLayer.appendChild(nextTooltipButton);\n      }\n\n      tooltipLayer.appendChild(buttonsLayer); //set proper position\n\n      _placeTooltip.call(self, targetElement.element, tooltipLayer, arrowLayer, helperNumberLayer); // change the scroll of the window, if needed\n\n\n      _scrollTo.call(this, targetElement.scrollTo, targetElement, tooltipLayer); //end of new element if-else condition\n\n    } // removing previous disable interaction layer\n\n\n    var disableInteractionLayer = self._targetElement.querySelector('.introjs-disableInteraction');\n\n    if (disableInteractionLayer) {\n      disableInteractionLayer.parentNode.removeChild(disableInteractionLayer);\n    } //disable interaction\n\n\n    if (targetElement.disableInteraction) {\n      _disableInteraction.call(self);\n    } // when it's the first step of tour\n\n\n    if (this._currentStep === 0 && this._introItems.length > 1) {\n      if (typeof skipTooltipButton !== \"undefined\" && skipTooltipButton !== null) {\n        skipTooltipButton.className = this._options.buttonClass + ' introjs-skipbutton';\n      }\n\n      if (typeof nextTooltipButton !== \"undefined\" && nextTooltipButton !== null) {\n        nextTooltipButton.className = this._options.buttonClass + ' introjs-nextbutton';\n      }\n\n      if (this._options.hidePrev === true) {\n        if (typeof prevTooltipButton !== \"undefined\" && prevTooltipButton !== null) {\n          prevTooltipButton.className = this._options.buttonClass + ' introjs-prevbutton introjs-hidden';\n        }\n\n        if (typeof nextTooltipButton !== \"undefined\" && nextTooltipButton !== null) {\n          _addClass(nextTooltipButton, 'introjs-fullbutton');\n        }\n      } else {\n        if (typeof prevTooltipButton !== \"undefined\" && prevTooltipButton !== null) {\n          prevTooltipButton.className = this._options.buttonClass + ' introjs-prevbutton introjs-disabled';\n        }\n      }\n\n      if (typeof skipTooltipButton !== \"undefined\" && skipTooltipButton !== null) {\n        skipTooltipButton.innerHTML = this._options.skipLabel;\n      }\n    } else if (this._introItems.length - 1 === this._currentStep || this._introItems.length === 1) {\n      // last step of tour\n      if (typeof skipTooltipButton !== \"undefined\" && skipTooltipButton !== null) {\n        skipTooltipButton.innerHTML = this._options.doneLabel; // adding donebutton class in addition to skipbutton\n\n        _addClass(skipTooltipButton, 'introjs-donebutton');\n      }\n\n      if (typeof prevTooltipButton !== \"undefined\" && prevTooltipButton !== null) {\n        prevTooltipButton.className = this._options.buttonClass + ' introjs-prevbutton';\n      }\n\n      if (this._options.hideNext === true) {\n        if (typeof nextTooltipButton !== \"undefined\" && nextTooltipButton !== null) {\n          nextTooltipButton.className = this._options.buttonClass + ' introjs-nextbutton introjs-hidden';\n        }\n\n        if (typeof prevTooltipButton !== \"undefined\" && prevTooltipButton !== null) {\n          _addClass(prevTooltipButton, 'introjs-fullbutton');\n        }\n      } else {\n        if (typeof nextTooltipButton !== \"undefined\" && nextTooltipButton !== null) {\n          nextTooltipButton.className = this._options.buttonClass + ' introjs-nextbutton introjs-disabled';\n        }\n      }\n    } else {\n      // steps between start and end\n      if (typeof skipTooltipButton !== \"undefined\" && skipTooltipButton !== null) {\n        skipTooltipButton.className = this._options.buttonClass + ' introjs-skipbutton';\n      }\n\n      if (typeof prevTooltipButton !== \"undefined\" && prevTooltipButton !== null) {\n        prevTooltipButton.className = this._options.buttonClass + ' introjs-prevbutton';\n      }\n\n      if (typeof nextTooltipButton !== \"undefined\" && nextTooltipButton !== null) {\n        nextTooltipButton.className = this._options.buttonClass + ' introjs-nextbutton';\n      }\n\n      if (typeof skipTooltipButton !== \"undefined\" && skipTooltipButton !== null) {\n        skipTooltipButton.innerHTML = this._options.skipLabel;\n      }\n    }\n\n    prevTooltipButton.setAttribute('role', 'button');\n    nextTooltipButton.setAttribute('role', 'button');\n    skipTooltipButton.setAttribute('role', 'button'); //Set focus on \"next\" button, so that hitting Enter always moves you onto the next step\n\n    if (typeof nextTooltipButton !== \"undefined\" && nextTooltipButton !== null) {\n      nextTooltipButton.focus();\n    }\n\n    _setShowElement(targetElement);\n\n    if (typeof this._introAfterChangeCallback !== 'undefined') {\n      this._introAfterChangeCallback.call(this, targetElement.element);\n    }\n  }\n  /**\n   * To change the scroll of `window` after highlighting an element\n   *\n   * @api private\n   * @method _scrollTo\n   * @param {String} scrollTo\n   * @param {Object} targetElement\n   * @param {Object} tooltipLayer\n   */\n\n\n  function _scrollTo(scrollTo, targetElement, tooltipLayer) {\n    if (scrollTo === 'off') return;\n    var rect;\n    if (!this._options.scrollToElement) return;\n\n    if (scrollTo === 'tooltip') {\n      rect = tooltipLayer.getBoundingClientRect();\n    } else {\n      rect = targetElement.element.getBoundingClientRect();\n    }\n\n    if (!_elementInViewport(targetElement.element)) {\n      var winHeight = _getWinSize().height;\n\n      var top = rect.bottom - (rect.bottom - rect.top); // TODO (afshinm): do we need scroll padding now?\n      // I have changed the scroll option and now it scrolls the window to\n      // the center of the target element or tooltip.\n\n      if (top < 0 || targetElement.element.clientHeight > winHeight) {\n        window.scrollBy(0, rect.top - (winHeight / 2 - rect.height / 2) - this._options.scrollPadding); // 30px padding from edge to look nice\n        //Scroll down\n      } else {\n        window.scrollBy(0, rect.top - (winHeight / 2 - rect.height / 2) + this._options.scrollPadding); // 30px padding from edge to look nice\n      }\n    }\n  }\n  /**\n   * To remove all show element(s)\n   *\n   * @api private\n   * @method _removeShowElement\n   */\n\n\n  function _removeShowElement() {\n    var elms = document.querySelectorAll('.introjs-showElement');\n\n    _forEach(elms, function (elm) {\n      _removeClass(elm, /introjs-[a-zA-Z]+/g);\n    });\n  }\n  /**\n   * To set the show element\n   * This function set a relative (in most cases) position and changes the z-index\n   *\n   * @api private\n   * @method _setShowElement\n   * @param {Object} targetElement\n   */\n\n\n  function _setShowElement(targetElement) {\n    var parentElm; // we need to add this show element class to the parent of SVG elements\n    // because the SVG elements can't have independent z-index\n\n    if (targetElement.element instanceof SVGElement) {\n      parentElm = targetElement.element.parentNode;\n\n      while (targetElement.element.parentNode !== null) {\n        if (!parentElm.tagName || parentElm.tagName.toLowerCase() === 'body') break;\n\n        if (parentElm.tagName.toLowerCase() === 'svg') {\n          _addClass(parentElm, 'introjs-showElement introjs-relativePosition');\n        }\n\n        parentElm = parentElm.parentNode;\n      }\n    }\n\n    _addClass(targetElement.element, 'introjs-showElement');\n\n    var currentElementPosition = _getPropValue(targetElement.element, 'position');\n\n    if (currentElementPosition !== 'absolute' && currentElementPosition !== 'relative' && currentElementPosition !== 'fixed') {\n      //change to new intro item\n      _addClass(targetElement.element, 'introjs-relativePosition');\n    }\n\n    parentElm = targetElement.element.parentNode;\n\n    while (parentElm !== null) {\n      if (!parentElm.tagName || parentElm.tagName.toLowerCase() === 'body') break; //fix The Stacking Context problem.\n      //More detail: https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context\n\n      var zIndex = _getPropValue(parentElm, 'z-index');\n\n      var opacity = parseFloat(_getPropValue(parentElm, 'opacity'));\n\n      var transform = _getPropValue(parentElm, 'transform') || _getPropValue(parentElm, '-webkit-transform') || _getPropValue(parentElm, '-moz-transform') || _getPropValue(parentElm, '-ms-transform') || _getPropValue(parentElm, '-o-transform');\n\n      if (/[0-9]+/.test(zIndex) || opacity < 1 || transform !== 'none' && transform !== undefined) {\n        _addClass(parentElm, 'introjs-fixParent');\n      }\n\n      parentElm = parentElm.parentNode;\n    }\n  }\n  /**\n  * Iterates arrays\n  *\n  * @param {Array} arr\n  * @param {Function} forEachFnc\n  * @param {Function} completeFnc\n  * @return {Null}\n  */\n\n\n  function _forEach(arr, forEachFnc, completeFnc) {\n    // in case arr is an empty query selector node list\n    if (arr) {\n      for (var i = 0, len = arr.length; i < len; i++) {\n        forEachFnc(arr[i], i);\n      }\n    }\n\n    if (typeof completeFnc === 'function') {\n      completeFnc();\n    }\n  }\n  /**\n  * Mark any object with an incrementing number\n  * used for keeping track of objects\n  *\n  * @param Object obj   Any object or DOM Element\n  * @param String key\n  * @return Object\n  */\n\n\n  var _stamp = function () {\n    var keys = {};\n    return function stamp(obj, key) {\n      // get group key\n      key = key || 'introjs-stamp'; // each group increments from 0\n\n      keys[key] = keys[key] || 0; // stamp only once per object\n\n      if (obj[key] === undefined) {\n        // increment key for each new object\n        obj[key] = keys[key]++;\n      }\n\n      return obj[key];\n    };\n  }();\n  /**\n  * DOMEvent Handles all DOM events\n  *\n  * methods:\n  *\n  * on - add event handler\n  * off - remove event\n  */\n\n\n  var DOMEvent = function () {\n    function DOMEvent() {\n      var events_key = 'introjs_event';\n      /**\n      * Gets a unique ID for an event listener\n      *\n      * @param Object obj\n      * @param String type        event type\n      * @param Function listener\n      * @param Object context\n      * @return String\n      */\n\n      this._id = function (obj, type, listener, context) {\n        return type + _stamp(listener) + (context ? '_' + _stamp(context) : '');\n      };\n      /**\n      * Adds event listener\n      *\n      * @param Object obj\n      * @param String type        event type\n      * @param Function listener\n      * @param Object context\n      * @param Boolean useCapture\n      * @return null\n      */\n\n\n      this.on = function (obj, type, listener, context, useCapture) {\n        var id = this._id.apply(this, arguments),\n            handler = function handler(e) {\n          return listener.call(context || obj, e || window.event);\n        };\n\n        if ('addEventListener' in obj) {\n          obj.addEventListener(type, handler, useCapture);\n        } else if ('attachEvent' in obj) {\n          obj.attachEvent('on' + type, handler);\n        }\n\n        obj[events_key] = obj[events_key] || {};\n        obj[events_key][id] = handler;\n      };\n      /**\n      * Removes event listener\n      *\n      * @param Object obj\n      * @param String type        event type\n      * @param Function listener\n      * @param Object context\n      * @param Boolean useCapture\n      * @return null\n      */\n\n\n      this.off = function (obj, type, listener, context, useCapture) {\n        var id = this._id.apply(this, arguments),\n            handler = obj[events_key] && obj[events_key][id];\n\n        if (!handler) {\n          return;\n        }\n\n        if ('removeEventListener' in obj) {\n          obj.removeEventListener(type, handler, useCapture);\n        } else if ('detachEvent' in obj) {\n          obj.detachEvent('on' + type, handler);\n        }\n\n        obj[events_key][id] = null;\n      };\n    }\n\n    return new DOMEvent();\n  }();\n  /**\n   * Append a class to an element\n   *\n   * @api private\n   * @method _addClass\n   * @param {Object} element\n   * @param {String} className\n   * @returns null\n   */\n\n\n  function _addClass(element, className) {\n    if (element instanceof SVGElement) {\n      // svg\n      var pre = element.getAttribute('class') || '';\n      element.setAttribute('class', pre + ' ' + className);\n    } else {\n      if (element.classList !== undefined) {\n        // check for modern classList property\n        var classes = className.split(' ');\n\n        _forEach(classes, function (cls) {\n          element.classList.add(cls);\n        });\n      } else if (!element.className.match(className)) {\n        // check if element doesn't already have className\n        element.className += ' ' + className;\n      }\n    }\n  }\n  /**\n   * Remove a class from an element\n   *\n   * @api private\n   * @method _removeClass\n   * @param {Object} element\n   * @param {RegExp|String} classNameRegex can be regex or string\n   * @returns null\n   */\n\n\n  function _removeClass(element, classNameRegex) {\n    if (element instanceof SVGElement) {\n      var pre = element.getAttribute('class') || '';\n      element.setAttribute('class', pre.replace(classNameRegex, '').replace(/^\\s+|\\s+$/g, ''));\n    } else {\n      element.className = element.className.replace(classNameRegex, '').replace(/^\\s+|\\s+$/g, '');\n    }\n  }\n  /**\n   * Get an element CSS property on the page\n   * Thanks to JavaScript Kit: http://www.javascriptkit.com/dhtmltutors/dhtmlcascade4.shtml\n   *\n   * @api private\n   * @method _getPropValue\n   * @param {Object} element\n   * @param {String} propName\n   * @returns Element's property value\n   */\n\n\n  function _getPropValue(element, propName) {\n    var propValue = '';\n\n    if (element.currentStyle) {\n      //IE\n      propValue = element.currentStyle[propName];\n    } else if (document.defaultView && document.defaultView.getComputedStyle) {\n      //Others\n      propValue = document.defaultView.getComputedStyle(element, null).getPropertyValue(propName);\n    } //Prevent exception in IE\n\n\n    if (propValue && propValue.toLowerCase) {\n      return propValue.toLowerCase();\n    } else {\n      return propValue;\n    }\n  }\n  /**\n   * Checks to see if target element (or parents) position is fixed or not\n   *\n   * @api private\n   * @method _isFixed\n   * @param {Object} element\n   * @returns Boolean\n   */\n\n\n  function _isFixed(element) {\n    var p = element.parentNode;\n\n    if (!p || p.nodeName === 'HTML') {\n      return false;\n    }\n\n    if (_getPropValue(element, 'position') === 'fixed') {\n      return true;\n    }\n\n    return _isFixed(p);\n  }\n  /**\n   * Provides a cross-browser way to get the screen dimensions\n   * via: http://stackoverflow.com/questions/5864467/internet-explorer-innerheight\n   *\n   * @api private\n   * @method _getWinSize\n   * @returns {Object} width and height attributes\n   */\n\n\n  function _getWinSize() {\n    if (window.innerWidth !== undefined) {\n      return {\n        width: window.innerWidth,\n        height: window.innerHeight\n      };\n    } else {\n      var D = document.documentElement;\n      return {\n        width: D.clientWidth,\n        height: D.clientHeight\n      };\n    }\n  }\n  /**\n   * Check to see if the element is in the viewport or not\n   * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n   *\n   * @api private\n   * @method _elementInViewport\n   * @param {Object} el\n   */\n\n\n  function _elementInViewport(el) {\n    var rect = el.getBoundingClientRect();\n    return rect.top >= 0 && rect.left >= 0 && rect.bottom + 80 <= window.innerHeight && // add 80 to get the text right\n    rect.right <= window.innerWidth;\n  }\n  /**\n   * Add overlay layer to the page\n   *\n   * @api private\n   * @method _addOverlayLayer\n   * @param {Object} targetElm\n   */\n\n\n  function _addOverlayLayer(targetElm) {\n    var overlayLayer = document.createElement('div'),\n        styleText = '',\n        self = this; //set css class name\n\n    overlayLayer.className = 'introjs-overlay'; //check if the target element is body, we should calculate the size of overlay layer in a better way\n\n    if (!targetElm.tagName || targetElm.tagName.toLowerCase() === 'body') {\n      styleText += 'top: 0;bottom: 0; left: 0;right: 0;position: fixed;';\n      overlayLayer.style.cssText = styleText;\n    } else {\n      //set overlay layer position\n      var elementPosition = _getOffset(targetElm);\n\n      if (elementPosition) {\n        styleText += 'width: ' + elementPosition.width + 'px; height:' + elementPosition.height + 'px; top:' + elementPosition.top + 'px;left: ' + elementPosition.left + 'px;';\n        overlayLayer.style.cssText = styleText;\n      }\n    }\n\n    targetElm.appendChild(overlayLayer);\n\n    overlayLayer.onclick = function () {\n      if (self._options.exitOnOverlayClick === true) {\n        _exitIntro.call(self, targetElm);\n      }\n    };\n\n    window.setTimeout(function () {\n      styleText += 'opacity: ' + self._options.overlayOpacity.toString() + ';';\n      overlayLayer.style.cssText = styleText;\n    }, 10);\n    return true;\n  }\n  /**\n   * Removes open hint (tooltip hint)\n   *\n   * @api private\n   * @method _removeHintTooltip\n   */\n\n\n  function _removeHintTooltip() {\n    var tooltip = document.querySelector('.introjs-hintReference');\n\n    if (tooltip) {\n      var step = tooltip.getAttribute('data-step');\n      tooltip.parentNode.removeChild(tooltip);\n      return step;\n    }\n  }\n  /**\n   * Start parsing hint items\n   *\n   * @api private\n   * @param {Object} targetElm\n   * @method _startHint\n   */\n\n\n  function _populateHints(targetElm) {\n    this._introItems = [];\n\n    if (this._options.hints) {\n      _forEach(this._options.hints, function (hint) {\n        var currentItem = _cloneObject(hint);\n\n        if (typeof currentItem.element === 'string') {\n          //grab the element with given selector from the page\n          currentItem.element = document.querySelector(currentItem.element);\n        }\n\n        currentItem.hintPosition = currentItem.hintPosition || this._options.hintPosition;\n        currentItem.hintAnimation = currentItem.hintAnimation || this._options.hintAnimation;\n\n        if (currentItem.element !== null) {\n          this._introItems.push(currentItem);\n        }\n      }.bind(this));\n    } else {\n      var hints = targetElm.querySelectorAll('*[data-hint]');\n\n      if (!hints || !hints.length) {\n        return false;\n      } //first add intro items with data-step\n\n\n      _forEach(hints, function (currentElement) {\n        // hint animation\n        var hintAnimation = currentElement.getAttribute('data-hintanimation');\n\n        if (hintAnimation) {\n          hintAnimation = hintAnimation === 'true';\n        } else {\n          hintAnimation = this._options.hintAnimation;\n        }\n\n        this._introItems.push({\n          element: currentElement,\n          hint: currentElement.getAttribute('data-hint'),\n          hintPosition: currentElement.getAttribute('data-hintposition') || this._options.hintPosition,\n          hintAnimation: hintAnimation,\n          tooltipClass: currentElement.getAttribute('data-tooltipclass'),\n          position: currentElement.getAttribute('data-position') || this._options.tooltipPosition\n        });\n      }.bind(this));\n    }\n\n    _addHints.call(this);\n    /* \n    todo:\n    these events should be removed at some point \n    */\n\n\n    DOMEvent.on(document, 'click', _removeHintTooltip, this, false);\n    DOMEvent.on(window, 'resize', _reAlignHints, this, true);\n  }\n  /**\n   * Re-aligns all hint elements\n   *\n   * @api private\n   * @method _reAlignHints\n   */\n\n\n  function _reAlignHints() {\n    _forEach(this._introItems, function (item) {\n      if (typeof item.targetElement === 'undefined') {\n        return;\n      }\n\n      _alignHintPosition.call(this, item.hintPosition, item.element, item.targetElement);\n    }.bind(this));\n  }\n  /**\n  * Get a queryselector within the hint wrapper\n  *\n  * @param {String} selector\n  * @return {NodeList|Array}\n  */\n\n\n  function _hintQuerySelectorAll(selector) {\n    var hintsWrapper = document.querySelector('.introjs-hints');\n    return hintsWrapper ? hintsWrapper.querySelectorAll(selector) : [];\n  }\n  /**\n   * Hide a hint\n   *\n   * @api private\n   * @method _hideHint\n   */\n\n\n  function _hideHint(stepId) {\n    var hint = _hintQuerySelectorAll('.introjs-hint[data-step=\"' + stepId + '\"]')[0];\n\n    _removeHintTooltip.call(this);\n\n    if (hint) {\n      _addClass(hint, 'introjs-hidehint');\n    } // call the callback function (if any)\n\n\n    if (typeof this._hintCloseCallback !== 'undefined') {\n      this._hintCloseCallback.call(this, stepId);\n    }\n  }\n  /**\n   * Hide all hints\n   *\n   * @api private\n   * @method _hideHints\n   */\n\n\n  function _hideHints() {\n    var hints = _hintQuerySelectorAll('.introjs-hint');\n\n    _forEach(hints, function (hint) {\n      _hideHint.call(this, hint.getAttribute('data-step'));\n    }.bind(this));\n  }\n  /**\n   * Show all hints\n   *\n   * @api private\n   * @method _showHints\n   */\n\n\n  function _showHints() {\n    var hints = _hintQuerySelectorAll('.introjs-hint');\n\n    if (hints && hints.length) {\n      _forEach(hints, function (hint) {\n        _showHint.call(this, hint.getAttribute('data-step'));\n      }.bind(this));\n    } else {\n      _populateHints.call(this, this._targetElement);\n    }\n  }\n  /**\n   * Show a hint\n   *\n   * @api private\n   * @method _showHint\n   */\n\n\n  function _showHint(stepId) {\n    var hint = _hintQuerySelectorAll('.introjs-hint[data-step=\"' + stepId + '\"]')[0];\n\n    if (hint) {\n      _removeClass(hint, /introjs-hidehint/g);\n    }\n  }\n  /**\n   * Removes all hint elements on the page\n   * Useful when you want to destroy the elements and add them again (e.g. a modal or popup)\n   *\n   * @api private\n   * @method _removeHints\n   */\n\n\n  function _removeHints() {\n    var hints = _hintQuerySelectorAll('.introjs-hint');\n\n    _forEach(hints, function (hint) {\n      _removeHint.call(this, hint.getAttribute('data-step'));\n    }.bind(this));\n  }\n  /**\n   * Remove one single hint element from the page\n   * Useful when you want to destroy the element and add them again (e.g. a modal or popup)\n   * Use removeHints if you want to remove all elements.\n   *\n   * @api private\n   * @method _removeHint\n   */\n\n\n  function _removeHint(stepId) {\n    var hint = _hintQuerySelectorAll('.introjs-hint[data-step=\"' + stepId + '\"]')[0];\n\n    if (hint) {\n      hint.parentNode.removeChild(hint);\n    }\n  }\n  /**\n   * Add all available hints to the page\n   *\n   * @api private\n   * @method _addHints\n   */\n\n\n  function _addHints() {\n    var self = this;\n    var hintsWrapper = document.querySelector('.introjs-hints');\n\n    if (hintsWrapper === null) {\n      hintsWrapper = document.createElement('div');\n      hintsWrapper.className = 'introjs-hints';\n    }\n    /**\n    * Returns an event handler unique to the hint iteration\n    * \n    * @param {Integer} i\n    * @return {Function}\n    */\n\n\n    var getHintClick = function getHintClick(i) {\n      return function (e) {\n        var evt = e ? e : window.event;\n\n        if (evt.stopPropagation) {\n          evt.stopPropagation();\n        }\n\n        if (evt.cancelBubble !== null) {\n          evt.cancelBubble = true;\n        }\n\n        _showHintDialog.call(self, i);\n      };\n    };\n\n    _forEach(this._introItems, function (item, i) {\n      // avoid append a hint twice\n      if (document.querySelector('.introjs-hint[data-step=\"' + i + '\"]')) {\n        return;\n      }\n\n      var hint = document.createElement('a');\n\n      _setAnchorAsButton(hint);\n\n      hint.onclick = getHintClick(i);\n      hint.className = 'introjs-hint';\n\n      if (!item.hintAnimation) {\n        _addClass(hint, 'introjs-hint-no-anim');\n      } // hint's position should be fixed if the target element's position is fixed\n\n\n      if (_isFixed(item.element)) {\n        _addClass(hint, 'introjs-fixedhint');\n      }\n\n      var hintDot = document.createElement('div');\n      hintDot.className = 'introjs-hint-dot';\n      var hintPulse = document.createElement('div');\n      hintPulse.className = 'introjs-hint-pulse';\n      hint.appendChild(hintDot);\n      hint.appendChild(hintPulse);\n      hint.setAttribute('data-step', i); // we swap the hint element with target element\n      // because _setHelperLayerPosition uses `element` property\n\n      item.targetElement = item.element;\n      item.element = hint; // align the hint position\n\n      _alignHintPosition.call(this, item.hintPosition, hint, item.targetElement);\n\n      hintsWrapper.appendChild(hint);\n    }.bind(this)); // adding the hints wrapper\n\n\n    document.body.appendChild(hintsWrapper); // call the callback function (if any)\n\n    if (typeof this._hintsAddedCallback !== 'undefined') {\n      this._hintsAddedCallback.call(this);\n    }\n  }\n  /**\n   * Aligns hint position\n   *\n   * @api private\n   * @method _alignHintPosition\n   * @param {String} position\n   * @param {Object} hint\n   * @param {Object} element\n   */\n\n\n  function _alignHintPosition(position, hint, element) {\n    // get/calculate offset of target element\n    var offset = _getOffset.call(this, element);\n\n    var iconWidth = 20;\n    var iconHeight = 20; // align the hint element\n\n    switch (position) {\n      default:\n      case 'top-left':\n        hint.style.left = offset.left + 'px';\n        hint.style.top = offset.top + 'px';\n        break;\n\n      case 'top-right':\n        hint.style.left = offset.left + offset.width - iconWidth + 'px';\n        hint.style.top = offset.top + 'px';\n        break;\n\n      case 'bottom-left':\n        hint.style.left = offset.left + 'px';\n        hint.style.top = offset.top + offset.height - iconHeight + 'px';\n        break;\n\n      case 'bottom-right':\n        hint.style.left = offset.left + offset.width - iconWidth + 'px';\n        hint.style.top = offset.top + offset.height - iconHeight + 'px';\n        break;\n\n      case 'middle-left':\n        hint.style.left = offset.left + 'px';\n        hint.style.top = offset.top + (offset.height - iconHeight) / 2 + 'px';\n        break;\n\n      case 'middle-right':\n        hint.style.left = offset.left + offset.width - iconWidth + 'px';\n        hint.style.top = offset.top + (offset.height - iconHeight) / 2 + 'px';\n        break;\n\n      case 'middle-middle':\n        hint.style.left = offset.left + (offset.width - iconWidth) / 2 + 'px';\n        hint.style.top = offset.top + (offset.height - iconHeight) / 2 + 'px';\n        break;\n\n      case 'bottom-middle':\n        hint.style.left = offset.left + (offset.width - iconWidth) / 2 + 'px';\n        hint.style.top = offset.top + offset.height - iconHeight + 'px';\n        break;\n\n      case 'top-middle':\n        hint.style.left = offset.left + (offset.width - iconWidth) / 2 + 'px';\n        hint.style.top = offset.top + 'px';\n        break;\n    }\n  }\n  /**\n   * Triggers when user clicks on the hint element\n   *\n   * @api private\n   * @method _showHintDialog\n   * @param {Number} stepId\n   */\n\n\n  function _showHintDialog(stepId) {\n    var hintElement = document.querySelector('.introjs-hint[data-step=\"' + stepId + '\"]');\n    var item = this._introItems[stepId]; // call the callback function (if any)\n\n    if (typeof this._hintClickCallback !== 'undefined') {\n      this._hintClickCallback.call(this, hintElement, item, stepId);\n    } // remove all open tooltips\n\n\n    var removedStep = _removeHintTooltip.call(this); // to toggle the tooltip\n\n\n    if (parseInt(removedStep, 10) === stepId) {\n      return;\n    }\n\n    var tooltipLayer = document.createElement('div');\n    var tooltipTextLayer = document.createElement('div');\n    var arrowLayer = document.createElement('div');\n    var referenceLayer = document.createElement('div');\n    tooltipLayer.className = 'introjs-tooltip';\n\n    tooltipLayer.onclick = function (e) {\n      //IE9 & Other Browsers\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      } //IE8 and Lower\n      else {\n          e.cancelBubble = true;\n        }\n    };\n\n    tooltipTextLayer.className = 'introjs-tooltiptext';\n    var tooltipWrapper = document.createElement('p');\n    tooltipWrapper.innerHTML = item.hint;\n    var closeButton = document.createElement('a');\n    closeButton.className = this._options.buttonClass;\n    closeButton.setAttribute('role', 'button');\n    closeButton.innerHTML = this._options.hintButtonLabel;\n    closeButton.onclick = _hideHint.bind(this, stepId);\n    tooltipTextLayer.appendChild(tooltipWrapper);\n    tooltipTextLayer.appendChild(closeButton);\n    arrowLayer.className = 'introjs-arrow';\n    tooltipLayer.appendChild(arrowLayer);\n    tooltipLayer.appendChild(tooltipTextLayer); // set current step for _placeTooltip function\n\n    this._currentStep = hintElement.getAttribute('data-step'); // align reference layer position\n\n    referenceLayer.className = 'introjs-tooltipReferenceLayer introjs-hintReference';\n    referenceLayer.setAttribute('data-step', hintElement.getAttribute('data-step'));\n\n    _setHelperLayerPosition.call(this, referenceLayer);\n\n    referenceLayer.appendChild(tooltipLayer);\n    document.body.appendChild(referenceLayer); //set proper position\n\n    _placeTooltip.call(this, hintElement, tooltipLayer, arrowLayer, null, true);\n  }\n  /**\n   * Get an element position on the page\n   * Thanks to `meouw`: http://stackoverflow.com/a/442474/375966\n   *\n   * @api private\n   * @method _getOffset\n   * @param {Object} element\n   * @returns Element's position info\n   */\n\n\n  function _getOffset(element) {\n    var body = document.body;\n    var docEl = document.documentElement;\n    var scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n    var scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n    var x = element.getBoundingClientRect();\n    return {\n      top: x.top + scrollTop,\n      width: x.width,\n      height: x.height,\n      left: x.left + scrollLeft\n    };\n  }\n  /**\n  * Find the nearest scrollable parent\n  * copied from https://stackoverflow.com/questions/35939886/find-first-scrollable-parent\n  *\n  * @param Element element\n  * @return Element\n  */\n\n\n  function _getScrollParent(element) {\n    var style = window.getComputedStyle(element);\n    var excludeStaticParent = style.position === \"absolute\";\n    var overflowRegex = /(auto|scroll)/;\n    if (style.position === \"fixed\") return document.body;\n\n    for (var parent = element; parent = parent.parentElement;) {\n      style = window.getComputedStyle(parent);\n\n      if (excludeStaticParent && style.position === \"static\") {\n        continue;\n      }\n\n      if (overflowRegex.test(style.overflow + style.overflowY + style.overflowX)) return parent;\n    }\n\n    return document.body;\n  }\n  /**\n  * scroll a scrollable element to a child element\n  *\n  * @param Element parent\n  * @param Element element\n  * @return Null\n  */\n\n\n  function _scrollParentToElement(parent, element) {\n    parent.scrollTop = element.offsetTop - parent.offsetTop;\n  }\n  /**\n   * Gets the current progress percentage\n   *\n   * @api private\n   * @method _getProgress\n   * @returns current progress percentage\n   */\n\n\n  function _getProgress() {\n    // Steps are 0 indexed\n    var currentStep = parseInt(this._currentStep + 1, 10);\n    return currentStep / this._introItems.length * 100;\n  }\n  /**\n   * Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1\n   * via: http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically\n   *\n   * @param obj1\n   * @param obj2\n   * @returns obj3 a new object based on obj1 and obj2\n   */\n\n\n  function _mergeOptions(obj1, obj2) {\n    var obj3 = {},\n        attrname;\n\n    for (attrname in obj1) {\n      obj3[attrname] = obj1[attrname];\n    }\n\n    for (attrname in obj2) {\n      obj3[attrname] = obj2[attrname];\n    }\n\n    return obj3;\n  }\n\n  var introJs = function introJs(targetElm) {\n    var instance;\n\n    if (typeof targetElm === 'object') {\n      //Ok, create a new instance\n      instance = new IntroJs(targetElm);\n    } else if (typeof targetElm === 'string') {\n      //select the target element with query selector\n      var targetElement = document.querySelector(targetElm);\n\n      if (targetElement) {\n        instance = new IntroJs(targetElement);\n      } else {\n        throw new Error('There is no element with given selector.');\n      }\n    } else {\n      instance = new IntroJs(document.body);\n    } // add instance to list of _instances\n    // passing group to _stamp to increment\n    // from 0 onward somewhat reliably\n\n\n    introJs.instances[_stamp(instance, 'introjs-instance')] = instance;\n    return instance;\n  };\n  /**\n   * Current IntroJs version\n   *\n   * @property version\n   * @type String\n   */\n\n\n  introJs.version = VERSION;\n  /**\n  * key-val object helper for introJs instances\n  *\n  * @property instances\n  * @type Object\n  */\n\n  introJs.instances = {}; //Prototype\n\n  introJs.fn = IntroJs.prototype = {\n    clone: function clone() {\n      return new IntroJs(this);\n    },\n    setOption: function setOption(option, value) {\n      this._options[option] = value;\n      return this;\n    },\n    setOptions: function setOptions(options) {\n      this._options = _mergeOptions(this._options, options);\n      return this;\n    },\n    start: function start(group) {\n      _introForElement.call(this, this._targetElement, group);\n\n      return this;\n    },\n    goToStep: function goToStep(step) {\n      _goToStep.call(this, step);\n\n      return this;\n    },\n    addStep: function addStep(options) {\n      if (!this._options.steps) {\n        this._options.steps = [];\n      }\n\n      this._options.steps.push(options);\n\n      return this;\n    },\n    addSteps: function addSteps(steps) {\n      if (!steps.length) return;\n\n      for (var index = 0; index < steps.length; index++) {\n        this.addStep(steps[index]);\n      }\n\n      return this;\n    },\n    goToStepNumber: function goToStepNumber(step) {\n      _goToStepNumber.call(this, step);\n\n      return this;\n    },\n    nextStep: function nextStep() {\n      _nextStep.call(this);\n\n      return this;\n    },\n    previousStep: function previousStep() {\n      _previousStep.call(this);\n\n      return this;\n    },\n    exit: function exit(force) {\n      _exitIntro.call(this, this._targetElement, force);\n\n      return this;\n    },\n    refresh: function refresh() {\n      _refresh.call(this);\n\n      return this;\n    },\n    onbeforechange: function onbeforechange(providedCallback) {\n      if (typeof providedCallback === 'function') {\n        this._introBeforeChangeCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onbeforechange was not a function');\n      }\n\n      return this;\n    },\n    onchange: function onchange(providedCallback) {\n      if (typeof providedCallback === 'function') {\n        this._introChangeCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onchange was not a function.');\n      }\n\n      return this;\n    },\n    onafterchange: function onafterchange(providedCallback) {\n      if (typeof providedCallback === 'function') {\n        this._introAfterChangeCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onafterchange was not a function');\n      }\n\n      return this;\n    },\n    oncomplete: function oncomplete(providedCallback) {\n      if (typeof providedCallback === 'function') {\n        this._introCompleteCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for oncomplete was not a function.');\n      }\n\n      return this;\n    },\n    onhintsadded: function onhintsadded(providedCallback) {\n      if (typeof providedCallback === 'function') {\n        this._hintsAddedCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onhintsadded was not a function.');\n      }\n\n      return this;\n    },\n    onhintclick: function onhintclick(providedCallback) {\n      if (typeof providedCallback === 'function') {\n        this._hintClickCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onhintclick was not a function.');\n      }\n\n      return this;\n    },\n    onhintclose: function onhintclose(providedCallback) {\n      if (typeof providedCallback === 'function') {\n        this._hintCloseCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onhintclose was not a function.');\n      }\n\n      return this;\n    },\n    onexit: function onexit(providedCallback) {\n      if (typeof providedCallback === 'function') {\n        this._introExitCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onexit was not a function.');\n      }\n\n      return this;\n    },\n    onskip: function onskip(providedCallback) {\n      if (typeof providedCallback === 'function') {\n        this._introSkipCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onskip was not a function.');\n      }\n\n      return this;\n    },\n    onbeforeexit: function onbeforeexit(providedCallback) {\n      if (typeof providedCallback === 'function') {\n        this._introBeforeExitCallback = providedCallback;\n      } else {\n        throw new Error('Provided callback for onbeforeexit was not a function.');\n      }\n\n      return this;\n    },\n    addHints: function addHints() {\n      _populateHints.call(this, this._targetElement);\n\n      return this;\n    },\n    hideHint: function hideHint(stepId) {\n      _hideHint.call(this, stepId);\n\n      return this;\n    },\n    hideHints: function hideHints() {\n      _hideHints.call(this);\n\n      return this;\n    },\n    showHint: function showHint(stepId) {\n      _showHint.call(this, stepId);\n\n      return this;\n    },\n    showHints: function showHints() {\n      _showHints.call(this);\n\n      return this;\n    },\n    removeHints: function removeHints() {\n      _removeHints.call(this);\n\n      return this;\n    },\n    removeHint: function removeHint(stepId) {\n      _removeHint.call(this, stepId);\n\n      return this;\n    },\n    showHintDialog: function showHintDialog(stepId) {\n      _showHintDialog.call(this, stepId);\n\n      return this;\n    }\n  };\n  return introJs;\n});"],"sourceRoot":""}